name: Build and Push Docker Image to Gitea Packages (via Nix Flake)

on:
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: tP3FHB4dkjo2lziTO5Gq
      AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_KEY }}

    steps:
      - uses: actions/checkout@main

      - name: Set up QEMU for multi-arch
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
        with:
          extra-conf: |
            experimental-features = nix-command flakes
            binary-caches = https://cache.nixos.org https://nix-community.cachix.org
            require-sigs = false
            extra-platforms = aarch64-linux

      - name: Build Docker image from Nix flake
        run: |
          nix build .#packages.aarch64-linux.default --out-link result --print-build-logs --quiet

      - name: Cache /nix/store to S3 (Production Safe, Exclude .drv)
        if: always()
        run: |
          URI="s3://nix-cache?endpoint=https://s3.yoreh.cn&region=us-east-1"

          echo "ðŸ“¦ Exporting binary cache (excluding .drv, source, etc.)..."

          if nix path-info --all >/dev/null 2>&1; then
            nix path-info --all | grep -v '\.drv$' > /tmp/paths.txt
          else
            nix-store --query --requisites /nix/store/*-* 2>/dev/null | grep -v '\.drv$' | sort -u > /tmp/paths.txt
          fi

          COUNT=$(wc -l < /tmp/paths.txt)
          echo "ðŸ“¤ Found $COUNT binary paths to upload."

          [ "$COUNT" -eq 0 ] && { echo "ðŸŽ‰ No paths to upload."; exit 0; }

          echo "ðŸš€ Uploading with nix copy (auto-skip existing)..."
          nix copy \
            --to "$URI" \
            --no-check-sigs \
            --option timeout 3600 \
            $(cat /tmp/paths.txt)

          echo "âœ… Binary cache exported successfully to: $URI"
